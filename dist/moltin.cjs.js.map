{"version":3,"file":null,"sources":["../src/utils/helpers.js","../src/config.js","../src/factories/storage.js","../src/factories/request.js","../src/extends/base.js","../src/extends/catalogue.js","../src/endpoints/brands.js","../src/endpoints/cart.js","../src/endpoints/categories.js","../src/endpoints/collections.js","../src/endpoints/currencies.js","../src/endpoints/files.js","../src/endpoints/gateways.js","../src/endpoints/legacyProducts.js","../src/endpoints/orders.js","../src/endpoints/products.js","../src/endpoints/settings.js","../src/moltin.js"],"sourcesContent":["import StorageFactory from '../factories/storage';\n\nexport function parseRelationshipType(type) {\n  let parsedType = `${type}s`;\n\n  if (type === 'category') {\n    parsedType = 'categories';\n  }\n\n  return parsedType;\n}\n\nexport function cartIdentifier(reset = false, id = false) {\n  const storage = new StorageFactory();\n\n  if (!reset && !id && storage.get('mcart') !== null) {\n    return storage.get('mcart');\n  }\n\n  if (!id) {\n    id = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'.replace(/[x]/g, () => (Math.random() * 16 | 0).toString(16));\n  }\n\n  storage.set('mcart', id);\n\n  return id;\n}\n\nexport function setHeaderContentType(uri, method) {\n  let contentType = 'application/json';\n\n  if (uri === 'files' && method === 'POST') {\n    contentType = 'multipart/form-data';\n  }\n\n  return contentType;\n}\n\nexport function mergeBodyObject(body, key, value) {\n  let mergedBody = body;\n\n  if (!(key in body)) {\n    mergedBody = Object.assign(body, {\n      key: value\n    });\n  }\n\n  return mergedBody;\n}\n","class Config {\n  constructor(options) {\n    const {\n      clientId,\n      clientSecret,\n      currency,\n      debug = false,\n      language = false,\n      protocol = 'https',\n      version = 'v1'\n    } = options;\n    const host = version === 'v1' ? 'api.molt.in' : 'api.moltin.com';\n\n    this.clientId = clientId;\n    this.clientSecret = clientSecret;\n    this.host = host;\n    this.port = '443';\n    this.protocol = protocol;\n    this.version = version;\n    this.debug = debug;\n    this.currency = currency;\n    this.language = language;\n    this.timeout = 60000;\n    this.auth = {\n      expires: 3600,\n      uri: 'oauth/access_token'\n    };\n    this.methods = ['GET', 'POST', 'PUT', 'DELETE'];\n  }\n}\n\nexport default Config;\n","/* jshint node: true */\n\nclass StorageFactory {\n  constructor() {\n    if (typeof localStorage === 'undefined' || localStorage === null) {\n      const LocalStorage = require('node-localstorage').LocalStorage;\n\n      this.localStorage = new LocalStorage('./localStorage');\n    } else {\n      this.localStorage = window.localStorage;\n    }\n  }\n\n  set(key, value) {\n    return this.localStorage.setItem(key, value);\n  }\n\n  get(key) {\n    return this.localStorage.getItem(key);\n  }\n\n  delete(key) {\n    return this.localStorage.removeItem(key);\n  }\n}\n\nexport default StorageFactory;\n","import StorageFactory from './storage';\n\nimport { setHeaderContentType } from '../utils/helpers';\n\nclass RequestFactory {\n  constructor(config) {\n    this.config = config;\n\n    this.storage = new StorageFactory();\n  }\n\n  authenticate() {\n    const config = this.config;\n    const storage = this.storage;\n\n    if (config.clientId.length <= 0) {\n      throw new Error('You must have a client id set');\n    }\n\n    const body = {\n      grant_type: config.clientSecret ? 'client_credentials' : 'implicit',\n      client_id: config.clientId,\n    };\n\n    if (config.clientSecret) {\n      body.client_secret = config.clientSecret;\n    }\n\n    const promise = new Promise((resolve, reject) => {\n      fetch(`${config.protocol}://${config.host}/${config.auth.uri}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: Object.keys(body).map(k => `${encodeURIComponent(k)}=${encodeURIComponent(body[k])}`).join('&')\n      })\n      .then((response) => {\n        if (response.status === 200) {\n          const data = response.json();\n          return resolve(data);\n        }\n        return resolve(response);\n      })\n      .then(null, error => reject(error));\n    });\n\n    promise.then((data) => {\n      storage.set('mtoken', data.access_token);\n      storage.set('mexpires', data.expires);\n    });\n\n    return promise;\n  }\n\n  send(uri, method, body) {\n    let pushData = body;\n    const config = this.config;\n    const storage = this.storage;\n\n    const promise = new Promise((resolve, reject) => {\n      const tokenIsExpired = Date.now().toString() >= storage.get('mexpires');\n      const req = function buildRequest() {\n        const headers = {\n          'Authorization': `Bearer: ${storage.get('mtoken')}`,\n          'Content-Type': setHeaderContentType(uri, method)\n        };\n\n        if (config.currency) {\n          headers['X-MOLTIN-CURRENCY'] = config.currency;\n        }\n\n        if ( method === 'POST' || method === 'PUT' ) {\n          pushData = `{\"data\":${JSON.stringify(body)}}`;\n        }\n\n        fetch(`${config.protocol}://${config.host}/${config.version}/${uri}`, {\n          body: pushData,\n          headers,\n          method: method.toUpperCase()\n        })\n        .then((response) => {\n          return resolve(response.json());\n        })\n        .catch(error => reject(error));\n      };\n\n      if (!storage.get('mtoken') || tokenIsExpired) {\n        return this.authenticate()\n          .then(req)\n          .catch(error => reject(error));\n      }\n\n      return req();\n    });\n\n    return promise;\n  }\n}\n\nexport default RequestFactory;\n","import RequestFactory from '../factories/request';\n\nclass BaseExtend {\n  constructor(config) {\n    this.request = new RequestFactory(config);\n\n    this.config = config;\n  }\n\n  Get(id, params) {\n    if (this.endpoint === 'carts') {\n      return this.request.send(`${this.endpoint}/${this.cartId}`, 'GET');\n    }\n\n    if (params) {\n      const includes = params.toString();\n\n      return this.request.send(`${this.endpoint}/${id}?include=${includes}`, 'GET');\n    }\n\n    return this.request.send(`${this.endpoint}/${id}`, 'GET');\n  }\n}\n\nexport default BaseExtend;\n","import BaseExtend from './base';\n\nclass CatalogueExtend extends BaseExtend {\n  List(params) {\n    if (params) {\n      const includes = params.toString();\n\n      return this.request.send(`${this.endpoint}?include=${includes}`, 'GET');\n    }\n\n    return this.request.send(`${this.endpoint}`, 'GET');\n  }\n\n  Create(body) {\n    return this.request.send(`${this.endpoint}`, 'POST', body);\n  }\n\n  Delete(id) {\n    return this.request.send(`${this.endpoint}/${id}`, 'DELETE');\n  }\n\n  Update(id, body) {\n    return this.request.send(`${this.endpoint}/${id}`, 'PUT', body);\n  }\n}\n\nexport default CatalogueExtend;\n","import CatalogueExtend from '../extends/catalogue';\n\nclass BrandsEndpoint extends CatalogueExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'brands';\n  }\n}\n\nexport default BrandsEndpoint;\n","import BaseExtend from '../extends/base';\n\nimport { cartIdentifier } from '../utils/helpers';\n\nclass CartEndpoint extends BaseExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'carts';\n    this.cartId = cartIdentifier();\n  }\n\n  Contents() {\n    return this.request.send(`${this.endpoint}/${this.cartId}/items`, 'GET');\n  }\n\n  Insert(id, quantity) {\n    const productObject = {\n      id: id,\n      quantity: parseInt(quantity) || 1\n    };\n\n    return this.request.send(`${this.endpoint}/${this.cartId}/items`, 'POST', productObject);\n  }\n\n  Remove(id) {\n    return this.request.send(`${this.endpoint}/${this.cartId}/items/${id}`, 'DELETE');\n  }\n\n  Quantity(id, quantity) {\n    const productObject = {\n      quantity: parseInt(quantity)\n    };\n\n    return this.request.send(`${this.endpoint}/${this.cartId}/items/${id}`, 'PUT', productObject);\n  }\n\n  Complete(body) {\n    return this.request.send(`${this.endpoint}/${this.cartId}/checkout`, 'POST', body);\n  }\n\n  Delete() {\n    return this.request.send(`${this.endpoint}/${this.cartId}`, 'DELETE');\n  }\n}\n\nexport default CartEndpoint;\n","import Catalogue from '../extends/catalogue';\n\nclass CategoriesEndpoint extends Catalogue {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'categories';\n  }\n\n  Tree() {\n    return this.request.send(`${this.endpoint}/tree`, 'GET');\n  }\n}\n\nexport default CategoriesEndpoint;\n","import CatalogueExtend from '../extends/catalogue';\n\nclass CollectionsEndpoint extends CatalogueExtend  {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'collections';\n  }\n}\n\nexport default CollectionsEndpoint;\n","import BaseExtend from '../extends/base';\nimport StorageFactory from '../factories/storage';\n\nclass CurrenciesEndpoint extends BaseExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'currencies';\n    this.storage = new StorageFactory();\n  }\n\n  List() {\n    return this.request.send(`${this.endpoint}`, 'GET');\n  }\n\n  Create(body) {\n    return this.request.send(`${this.endpoint}`, 'POST', body);\n  }\n\n  Delete(id) {\n    return this.request.send(`${this.endpoint}/${id}`, 'DELETE');\n  }\n\n  Update(id, body) {\n    return this.request.send(`${this.endpoint}/${id}`, 'PUT', body);\n  }\n\n  Set(currency) {\n    const storage = this.storage;\n    const config = this.config;\n\n    storage.set('mcurrency', currency);\n    config.currency = currency;\n\n    const promise = new Promise((resolve, reject) => {\n      const request = storage.get('mcurrency');\n\n      try {\n        resolve(request);\n      } catch(err) {\n        reject(new Error(err));\n      }\n    });\n\n    return promise;\n  }\n\n  Active() {\n    const storage = this.storage;\n\n    const promise = new Promise((resolve, reject) => {\n      const request = storage.get('mcurrency');\n\n      try {\n        resolve(request);\n      } catch(err) {\n        reject(new Error(err));\n      }\n    });\n\n    return promise;\n  }\n}\n\nexport default CurrenciesEndpoint;\n","import BaseExtend from '../extends/base';\n\nclass FilesEndpoint extends BaseExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'files';\n  }\n\n  List() {\n    return this.request.send(`${this.endpoint}`, 'GET');\n  }\n\n  Create(body) {\n    return this.request.send(`${this.endpoint}`, 'POST', body);\n  }\n\n  Delete(id) {\n    return this.request.send(`${this.endpoint}/${id}`, 'DELETE');\n  }\n}\n\nexport default FilesEndpoint;\n","import BaseExtend from '../extends/base';\n\nclass GatewaysEndpoint extends BaseExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'gateways';\n  }\n\n  List() {\n    return this.request.send(`${this.endpoint}`, 'GET');\n  }\n\n  Update(slug, body) {\n    return this.request.send(`${this.endpoint}/${slug}`, 'PUT', body);\n  }\n\n  Enabled(slug, enabled) {\n    return this.request.send(`${this.endpoint}/${slug}`, 'PUT', {\n      type: 'gateway',\n      enabled: enabled\n    });\n  }\n}\n\nexport default GatewaysEndpoint;\n","import CatalogueExtend from '../extends/catalogue';\n\nclass LegacyProductsEndpoint extends CatalogueExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'products';\n  }\n\n  AddModifier(id, body) {\n    return this.request.send(`${this.endpoint}/${id}/modifiers`, 'POST', [body]);\n  }\n\n  AddVariation(product, modifier, body) {\n    return this.request.send(`${this.endpoint}/${product}/modifiers/${modifier}/variations`, 'POST', [body]);\n  }\n\n  DeleteModifier(product, modifier) {\n    return this.request.send(`${this.endpoint}/${product}/modifiers/${modifier}`, 'DELETE');\n  }\n\n  DeleteVariation(product, modifier, variation) {\n    return this.request.send(`${this.endpoint}/${product}/modifiers/${modifier}/variations/${variation}`, 'DELETE');\n  }\n\n  ListVariations(product) {\n    return this.request.send(`${this.endpoint}/${product}/variations`, 'GET');\n  }\n}\n\nexport default LegacyProductsEndpoint;\n","import BaseExtend from '../extends/base';\n\nclass OrdersEndpoint extends BaseExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'orders';\n  }\n\n  List() {\n    return this.request.send(`${this.endpoint}`, 'GET');\n  }\n\n  Payment(id, body) {\n    return this.request.send(`${this.endpoint}/${id}/payments`, 'POST', body);\n  }\n}\n\nexport default OrdersEndpoint;\n","import CatalogueExtend from '../extends/catalogue';\n\nimport { parseRelationshipType } from '../utils/helpers';\n\nclass ProductsEndpoint extends CatalogueExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'products';\n  }\n\n  AddRelationship(id, body) {\n    const parsedType = parseRelationshipType(body.type);\n\n    return this.request.send(`${this.endpoint}/${id}/relationships/${parsedType}`, 'POST', [body]);\n  }\n\n  DeleteRelationship(id, body) {\n    const parsedType = parseRelationshipType(body.type);\n\n    return this.request.send(`${this.endpoint}/${id}/relationships/${parsedType}`, 'DELETE', [body]);\n  }\n}\n\nexport default ProductsEndpoint;\n","import BaseExtend from '../extends/base';\n\nclass SettingsEndpoint extends BaseExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'settings';\n  }\n\n  List() {\n    return this.request.send(`${this.endpoint}`, 'GET');\n  }\n\n  Update(body) {\n    return this.request.send(`${this.endpoint}`, 'PUT', body);\n  }\n\n}\n\nexport default SettingsEndpoint;\n","import 'fetch-everywhere';\nimport 'es6-promise';\n\nimport Config from './config';\nimport RequestFactory from './factories/request';\nimport StorageFactory from './factories/storage';\n\nimport BrandsEndpoint from './endpoints/brands';\nimport CartEndpoint from './endpoints/cart';\nimport CategoriesEndpoint from './endpoints/categories';\nimport CollectionsEndpoint from './endpoints/collections';\nimport CurrenciesEndpoint from './endpoints/currencies';\nimport FilesEndpoint from './endpoints/files';\nimport GatewaysEndpoint from './endpoints/gateways';\nimport LegacyProductsEndpoint from './endpoints/legacyProducts';\nimport OrdersEndpoint from './endpoints/orders';\nimport ProductsEndpoint from './endpoints/products';\nimport SettingsEndpoint from './endpoints/settings';\n\nexport default class Moltin {\n  constructor(config) {\n    const { version } = config;\n    this.config = config;\n    this.request = new RequestFactory(config);\n    this.storage = new StorageFactory();\n\n    this.Brands = new BrandsEndpoint(config);\n    this.Cart = new CartEndpoint(config);\n    this.Categories = new CategoriesEndpoint(config);\n    this.Collections = new CollectionsEndpoint(config);\n    this.Currencies = new CurrenciesEndpoint(config);\n    this.Gateways = new GatewaysEndpoint(config);\n    this.Orders = new OrdersEndpoint(config);\n\n    if (version === 'v1') {\n      this.Products = new LegacyProductsEndpoint(config);\n      this.Settings = new SettingsEndpoint(config);\n      this.Images = new FilesEndpoint(config);\n\n    } else {\n      this.Files = new FilesEndpoint(config);\n      this.Products = new ProductsEndpoint(config);\n\n    }\n  }\n\n  // Expose `authenticate` function on the Moltin class\n  Authenticate() {\n    return this.request.authenticate();\n  }\n}\n\n// Export a function to instantiate the Moltin class\nexport const MoltinClient = (config) => new Moltin(new Config(config));\n"],"names":["parseRelationshipType","type","let","parsedType","cartIdentifier","reset","id","const","storage","StorageFactory","get","replace","Math","random","toString","set","setHeaderContentType","uri","method","contentType","Config","options","clientId","clientSecret","currency","host","version","this","port","protocol","debug","language","timeout","auth","expires","methods","localStorage","LocalStorage","require","window","key","value","setItem","getItem","delete","removeItem","RequestFactory","config","authenticate","length","Error","body","grant_type","client_id","client_secret","promise","Promise","resolve","reject","fetch","headers","Content-Type","Object","keys","map","k","encodeURIComponent","join","then","response","status","data","json","error","access_token","send","pushData","tokenIsExpired","Date","now","req","Authorization","JSON","stringify","toUpperCase","catch","BaseExtend","request","Get","params","endpoint","includes","CatalogueExtend","List","Create","Delete","Update","BrandsEndpoint","super","CartEndpoint","cartId","Contents","Insert","quantity","productObject","parseInt","Remove","Quantity","Complete","CategoriesEndpoint","Tree","Catalogue","CollectionsEndpoint","CurrenciesEndpoint","Set","err","Active","FilesEndpoint","GatewaysEndpoint","slug","Enabled","enabled","LegacyProductsEndpoint","AddModifier","AddVariation","product","modifier","DeleteModifier","DeleteVariation","variation","ListVariations","OrdersEndpoint","Payment","ProductsEndpoint","AddRelationship","DeleteRelationship","SettingsEndpoint","Moltin","Brands","Cart","Categories","Collections","Currencies","Gateways","Orders","Products","Settings","Images","Files","Authenticate","MoltinClient"],"mappings":"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"}